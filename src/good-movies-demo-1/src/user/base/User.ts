/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsString, IsOptional, ValidateNested } from "class-validator";
import { Type } from "class-transformer";
import { Movie } from "../../movie/base/Movie";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { UserMovieMapping } from "../../userMovieMapping/base/UserMovieMapping";
import { UserSeriesMapping } from "../../userSeriesMapping/base/UserSeriesMapping";
import { Series } from "../../series/base/Series";

@ObjectType()
class User {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  link!: string | null;

  @ApiProperty({
    required: false,
    type: () => Movie,
  })
  @ValidateNested()
  @Type(() => Movie)
  @IsOptional()
  movies?: Movie | null;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => UserMovieMapping,
  })
  @ValidateNested()
  @Type(() => UserMovieMapping)
  @IsOptional()
  userMovieMapping?: UserMovieMapping | null;

  @ApiProperty({
    required: false,
    type: () => UserMovieMapping,
  })
  @ValidateNested()
  @Type(() => UserMovieMapping)
  @IsOptional()
  userMovieMappings?: UserMovieMapping | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  UserName!: string;

  @ApiProperty({
    required: false,
    type: () => UserSeriesMapping,
  })
  @ValidateNested()
  @Type(() => UserSeriesMapping)
  @IsOptional()
  userSeriesMapping?: UserSeriesMapping | null;

  @ApiProperty({
    required: false,
    type: () => Series,
  })
  @ValidateNested()
  @Type(() => Series)
  @IsOptional()
  webseries?: Series | null;
}

export { User as User };
