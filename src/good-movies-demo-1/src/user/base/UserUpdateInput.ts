/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserMovieMappingWhereUniqueInput } from "../../userMovieMapping/base/UserMovieMappingWhereUniqueInput";
import { Type } from "class-transformer";
import { UserSeriesMappingWhereUniqueInput } from "../../userSeriesMapping/base/UserSeriesMappingWhereUniqueInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  link?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => UserMovieMappingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserMovieMappingWhereUniqueInput)
  @IsOptional()
  @Field(() => UserMovieMappingWhereUniqueInput, {
    nullable: true,
  })
  userMovieMapping?: UserMovieMappingWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserMovieMappingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserMovieMappingWhereUniqueInput)
  @IsOptional()
  @Field(() => UserMovieMappingWhereUniqueInput, {
    nullable: true,
  })
  userMovieMappings?: UserMovieMappingWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  UserName?: string;

  @ApiProperty({
    required: false,
    type: () => UserSeriesMappingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserSeriesMappingWhereUniqueInput)
  @IsOptional()
  @Field(() => UserSeriesMappingWhereUniqueInput, {
    nullable: true,
  })
  userSeriesMapping?: UserSeriesMappingWhereUniqueInput | null;
}

export { UserUpdateInput as UserUpdateInput };
