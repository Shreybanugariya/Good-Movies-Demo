/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { MovieWhereUniqueInput } from "../../movie/base/MovieWhereUniqueInput";
import { UserMovieMappingWhereUniqueInput } from "../../userMovieMapping/base/UserMovieMappingWhereUniqueInput";
import { UserSeriesMappingWhereUniqueInput } from "../../userSeriesMapping/base/UserSeriesMappingWhereUniqueInput";
import { SeriesWhereUniqueInput } from "../../series/base/SeriesWhereUniqueInput";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  link?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => MovieWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MovieWhereUniqueInput)
  @IsOptional()
  @Field(() => MovieWhereUniqueInput, {
    nullable: true,
  })
  movies?: MovieWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserMovieMappingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserMovieMappingWhereUniqueInput)
  @IsOptional()
  @Field(() => UserMovieMappingWhereUniqueInput, {
    nullable: true,
  })
  userMovieMapping?: UserMovieMappingWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => UserMovieMappingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserMovieMappingWhereUniqueInput)
  @IsOptional()
  @Field(() => UserMovieMappingWhereUniqueInput, {
    nullable: true,
  })
  userMovieMappings?: UserMovieMappingWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  UserName?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => UserSeriesMappingWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserSeriesMappingWhereUniqueInput)
  @IsOptional()
  @Field(() => UserSeriesMappingWhereUniqueInput, {
    nullable: true,
  })
  userSeriesMapping?: UserSeriesMappingWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => SeriesWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SeriesWhereUniqueInput)
  @IsOptional()
  @Field(() => SeriesWhereUniqueInput, {
    nullable: true,
  })
  webseries?: SeriesWhereUniqueInput;
}

export { UserWhereInput as UserWhereInput };
